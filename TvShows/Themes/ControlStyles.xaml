<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TvShows">

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                               StrokeThickness="1"
                               StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Text-->
    <Style x:Key="StandardTextBox"
           TargetType="{x:Type TextBox}">
        <Setter Property="Background"
                Value="{StaticResource TextBoxBackground}" />
        <Setter Property="Foreground"
                Value="{StaticResource Foreground}" />
        <Setter Property="CaretBrush"
                Value="{StaticResource Foreground}" />
        <Setter Property="MinHeight"
                Value="28" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="1"
                                      VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource TextBoxBackgroundSelected}" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource TextBoxBackgroundSelected}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError"
                     Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={RelativeSource Self}, 
                        Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="StandardPasswordBox"
           TargetType="{x:Type PasswordBox}">
        <Setter Property="Background"
                Value="{StaticResource TextBoxBackground}" />
        <Setter Property="Foreground"
                Value="{StaticResource Foreground}" />
        <Setter Property="CaretBrush"
                Value="{StaticResource Foreground}" />
        <Setter Property="MinHeight"
                Value="28" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="1"
                                      VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource TextBoxBackgroundSelected}" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource TextBoxBackgroundSelected}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value=".55" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Buttons-->
    <Style x:Key="StandardButton"
           TargetType="{x:Type Button}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>-->
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Visibility"
                Value="Visible" />
        <Setter Property="Foreground"
                Value="{StaticResource Foreground}" />
        <Setter Property="Background"
                Value="{StaticResource BackgroundNormal}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource BorderBrushNormal}" />
        <Setter Property="MinWidth"
                Value="90" />
        <!--<Setter Property="Margin" Value="0,0,8,0"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border SnapsToDevicePixels="True"
                            BorderThickness="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <Grid SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="7,5" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource BackgroundHighlighted}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource BorderBrushHighlighted}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource BackgroundHighlighted}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource BorderBrushSelected}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource BackgroundSelected}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource BorderBrushSelected}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolbarButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground"
                Value="{StaticResource Foreground}" />
        <Setter Property="Padding"
                Value="2" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="Black" />
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource BackgroundNormal}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="#FF3399FF" />
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="#FFC2E0FF" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="Black" />
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource BackgroundSelected}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter TargetName="Bd"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleToolbarButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground"
                Value="{StaticResource Foreground}" />
        <Setter Property="Padding"
                Value="2" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="Black" />
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource BorderBrushSelected}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="{StaticResource BorderBrushSelected}" />
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource BackgroundNormal}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="#FF3399FF" />
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="#FFC2E0FF" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="{StaticResource BorderBrushNormal}" />
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource BackgroundSelected}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Padding"
                Value="2" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True"
                            Cursor="Hand">
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- The FlatWindow's Minimize, Restore, Maximize, and Close Button style -->
    <Style x:Key="WindowButtonStyle"
           TargetType="{x:Type Button}">
        <!--<Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />-->
        <Setter Property="Foreground"
                Value="{DynamicResource Foreground}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Width"
                Value="30" />
        <Setter Property="Height"
                Value="28" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="MainGrid"
                          Background="{StaticResource Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"
                                          Opacity="0.75" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value="1" />
                            <Setter TargetName="MainGrid"
                                    Property="Background"
                                    Value="{DynamicResource BackgroundHighlighted}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value=".75" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="MainGrid"
                                    Property="Background"
                                    Value="{DynamicResource BackgroundSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ScrollBars-->
    <Style x:Key="ScrollBarLineButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Background"
                Value="{StaticResource BackgroundNormal}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource BorderBrushNormal}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <Path HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Fill="{StaticResource Foreground}"
                              Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource BackgroundHighlighted}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource BorderBrushHighlighted}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource BackgroundSelected}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource BorderBrushSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource ScrollBarPageButtonBackgroundHighlighted}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ScrollBarThumb"
           TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Background"
                Value="{StaticResource BackgroundNormal}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource BorderBrushNormal}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource BackgroundHighlighted}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource BorderBrushHighlighted}" />
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource BackgroundSelected}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource BorderBrushSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="18" />
                <RowDefinition />
                <RowDefinition Height="18" />
            </Grid.RowDefinitions>
            <RepeatButton Grid.Row="0"
                          Style="{StaticResource ScrollBarLineButton}"
                          Content="M 0 4 L 8 4 L 4 0 Z"
                          Command="ScrollBar.LineUpCommand" />
            <Track x:Name="PART_Track"
                   Grid.Row="1"
                   IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="2"
                          Style="{StaticResource ScrollBarLineButton}"
                          Command="ScrollBar.LineDownCommand"
                          Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="18" />
                <ColumnDefinition />
                <ColumnDefinition Width="18" />
            </Grid.ColumnDefinitions>
            <RepeatButton Grid.Column="0"
                          Style="{StaticResource ScrollBarLineButton}"
                          Content="M 0 4 L 4 8 L 4 0 Z"
                          Command="ScrollBar.LineLeftCommand" />
            <Track x:Name="PART_Track"
                   Grid.Column="1"
                   IsDirectionReversed="false">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="2"
                          Style="{StaticResource ScrollBarLineButton}"
                          Content="M 4 4 L 0 8 L 0 0 Z"
                          Command="ScrollBar.LineRightCommand" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="StandardScrollBar"
           TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Width"
                        Value="12" />
                <Setter Property="Height"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Height"
                        Value="12" />
                <Setter Property="Width"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Orientation"
                               Value="Vertical" />
                    <Condition Property="IsMouseOver"
                               Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Width"
                                             To="20"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Width"
                                             To="12"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Orientation"
                               Value="Horizontal" />
                    <Condition Property="IsMouseOver"
                               Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Height"
                                             To="20"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Height"
                                             To="12"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--Tab Control-->
    <Style TargetType="{x:Type TabControl}">
        <Style.Resources>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}" />
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Foreground"
                        Value="{StaticResource Foreground}" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="Margin"
                        Value="-1,0,0,0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="PART_Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter ContentSource="Header"
                                                  Margin="10,5" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--<MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TabItem.TabStripPlacement" Value="Top"/>
                                        <Condition Property="IsSelected" Value="false" />
                                    </MultiTrigger.Conditions>
                                </MultiTrigger>-->

                                <Trigger Property="IsSelected"
                                         Value="false">
                                    <Setter Property="Background"
                                            Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="true">
                                    <Setter Property="Background"
                                            Value="{DynamicResource BorderBrushSelected}" />
                                    <Setter Property="BorderBrush"
                                            Value="{DynamicResource BorderBrushSelected}" />
                                </Trigger>
                                <Trigger Property="IsSelected"
                                         Value="true">
                                    <Setter Property="Background"
                                            Value="{DynamicResource BackgroundSelected}" />
                                </Trigger>
                                <Trigger Property="TabItem.TabStripPlacement"
                                         Value="Top">
                                    <Setter Property="BorderThickness"
                                            Value="1,1,1,0" />
                                    <Setter Property="BorderBrush"
                                            Value="{DynamicResource BackgroundSelected}" />
                                </Trigger>

                                <!--<MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TabItem.TabStripPlacement" Value="Top"/>
                                        <Condition Property="IsSelected" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="BorderBrush" Value="{StaticResource BackgroundSelected}" />
                                </MultiTrigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="True"
                          SnapsToDevicePixels="True"
                          KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="ColumnDefinition0" />
                            <ColumnDefinition Width="0"
                                              Name="ColumnDefinition1" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"
                                           Name="RowDefinition0" />
                            <RowDefinition Height="*"
                                           Name="RowDefinition1" />
                        </Grid.RowDefinitions>

                        <ScrollViewer HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Auto">
                            <!--<Border x:Name="HeaderBorder"
                                BorderThickness="0,0,0,3"
                                BorderBrush="{DynamicResource BackgroundNormal}">-->
                            <TabPanel IsItemsHost="True"
                                      Name="HeaderPanel"
                                      Panel.ZIndex="1"
                                      Margin="5,0,4,-1"
                                      KeyboardNavigation.TabIndex="1"
                                      Grid.Column="0"
                                      Grid.Row="0" />
                            <!--</Border>-->
                        </ScrollViewer>

                        <Grid Name="ContentPanel"
                              KeyboardNavigation.TabIndex="2"
                              KeyboardNavigation.TabNavigation="Local"
                              KeyboardNavigation.DirectionalNavigation="Contained"
                              Grid.Column="0"
                              Grid.Row="1">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter Content="{TemplateBinding SelectedContent}"
                                                  ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                                  ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                                  ContentSource="SelectedContent"
                                                  Name="PART_SelectedContentHost"
                                                  Margin="5"
                                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="TabControl.TabStripPlacement"
                                 Value="Bottom">
                            <Setter TargetName="HeaderPanel"
                                    Property="Grid.Row"
                                    Value="1" />
                            <Setter TargetName="ContentPanel"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="RowDefinition0"
                                    Property="RowDefinition.Height"
                                    Value="*" />
                            <Setter TargetName="RowDefinition1"
                                    Property="RowDefinition.Height"
                                    Value="Auto" />
                            <Setter TargetName="HeaderPanel"
                                    Property="FrameworkElement.Margin"
                                    Value="0,-1,4,0" />
                            <!--<Setter TargetName="HeaderBorder" Property="Border.BorderThickness" Value="0,3,0,0" />-->
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement"
                                 Value="Left">
                            <Setter TargetName="HeaderPanel"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="ContentPanel"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="HeaderPanel"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="ContentPanel"
                                    Property="Grid.Column"
                                    Value="1" />
                            <Setter TargetName="ColumnDefinition0"
                                    Property="ColumnDefinition.Width"
                                    Value="Auto" />
                            <Setter TargetName="ColumnDefinition1"
                                    Property="ColumnDefinition.Width"
                                    Value="*" />
                            <Setter TargetName="RowDefinition0"
                                    Property="RowDefinition.Height"
                                    Value="*" />
                            <Setter TargetName="RowDefinition1"
                                    Property="RowDefinition.Height"
                                    Value="0" />
                            <Setter TargetName="HeaderPanel"
                                    Property="FrameworkElement.Margin"
                                    Value="0,20,-1,4" />
                            <!--<Setter TargetName="HeaderBorder" Property="Border.BorderThickness" Value="0,0,3,0" />-->
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement"
                                 Value="Right">
                            <Setter TargetName="HeaderPanel"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="ContentPanel"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="HeaderPanel"
                                    Property="Grid.Column"
                                    Value="1" />
                            <Setter TargetName="ContentPanel"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="ColumnDefinition0"
                                    Property="ColumnDefinition.Width"
                                    Value="*" />
                            <Setter TargetName="ColumnDefinition1"
                                    Property="ColumnDefinition.Width"
                                    Value="Auto" />
                            <Setter TargetName="RowDefinition0"
                                    Property="RowDefinition.Height"
                                    Value="*" />
                            <Setter TargetName="RowDefinition1"
                                    Property="RowDefinition.Height"
                                    Value="0" />
                            <Setter TargetName="HeaderPanel"
                                    Property="FrameworkElement.Margin"
                                    Value="-1,0,0,4" />
                            <!--<Setter TargetName="HeaderBorder" Property="Border.BorderThickness" Value="3,0,0,0" />-->

                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter Property="TextElement.Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background"
                Value="{StaticResource BackgroundDark}" />
    </Style>

    <!--ProgressBar-->
    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Height"
                Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid Name="TemplateRoot"
                          SnapsToDevicePixels="True">
                        <Rectangle RadiusX="2"
                                   RadiusY="2"
                                   Fill="Transparent" />
                        <Border BorderBrush="{DynamicResource BorderBrushSelected}"
                                BorderThickness="1" />
                        <Rectangle Name="PART_Track"
                                   Margin="1,1,1,1" />
                        <Decorator Name="PART_Indicator"
                                   Margin="1,1,1,1"
                                   HorizontalAlignment="Left">
                            <Grid Name="Foreground">
                                <Rectangle Fill="Transparent"
                                           Name="Indicator" />
                                <Grid Name="Overlay"
                                      Background="{DynamicResource BackgroundSelected}">
                                    <!--<Grid Name="Animation"
                                          ClipToBounds="True">
                                        <Border Name="PART_GlowRect"
                                                HorizontalAlignment="Left"
                                                Width="50">
                                            <StackPanel Orientation="Horizontal">
                                                <Rectangle Width="5"
                                                           Margin="0,12,5,12"
                                                           Fill="{StaticResource BorderBrushSelected}" />
                                                <Rectangle Width="5"
                                                           Margin="0,12,5,12"
                                                           Fill="{StaticResource BorderBrushSelected}" />
                                                <Rectangle Width="5"
                                                           Margin="0,12,5,12"
                                                           Fill="{StaticResource BorderBrushSelected}" />
                                                <Rectangle Width="5"
                                                           Margin="0,12,5,12"
                                                           Fill="{StaticResource BorderBrushSelected}" />
                                                <Rectangle Width="5"
                                                           Margin="0,12,5,12"
                                                           Fill="{StaticResource BorderBrushSelected}" />
                                            </StackPanel>
                                        </Border>
                                    </Grid>-->
                                </Grid>
                            </Grid>
                        </Decorator>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ToolTip-->
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Foreground"
                Value="{StaticResource Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border Background="{StaticResource BackgroundNormal}"
                            BorderBrush="{StaticResource BackgroundDark}"
                            BorderThickness="1"
                            Margin="3"
                            Padding="6,4"
                            CornerRadius="2"
                            MaxWidth="300">
                        <ContentPresenter>
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextWrapping"
                                            Value="Wrap" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CheckBox-->
    <Style x:Key="FlatCheckBox"
           TargetType="CheckBox">
        <Setter Property="Foreground"
                Value="{StaticResource Foreground}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="3,0,0,0" />
        <Setter Property="MinHeight"
                Value="30" />
        <Setter Property="MinWidth"
                Value="30" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Background="Transparent">
                        <Grid.Resources>
                            <Style x:Key="StandardRectangle"
                                   TargetType="{x:Type Rectangle}">
                                <Setter Property="StrokeThickness"
                                        Value="1" />
                                <Setter Property="Width"
                                        Value="18" />
                                <Setter Property="Height"
                                        Value="18" />
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To=".7"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="hover" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="pressed" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <!--<DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />-->
                                        <DoubleAnimation Duration="0"
                                                         To=".25"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="disabled" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="checkBox" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="IndeterminateCheck" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="focused" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="invalidUnfocused" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="invalidFocused" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Fill="Transparent" />
                        <Rectangle x:Name="normal"
                                   Opacity="1"
                                   Stroke="{StaticResource BorderBrushNormal}"
                                   Fill="{StaticResource TextBoxBackground}"
                                   Style="{StaticResource StandardRectangle}" />
                        <Rectangle x:Name="pressed"
                                   Opacity="0"
                                   Stroke="{StaticResource BorderBrushSelected}"
                                   Fill="{StaticResource BackgroundSelected}"
                                   Style="{StaticResource StandardRectangle}" />
                        <Rectangle x:Name="focused"
                                   Opacity="0"
                                   Stroke="{StaticResource BorderBrushSelected}"
                                   Fill="{StaticResource BackgroundHighlighted}"
                                   Style="{StaticResource StandardRectangle}" />
                        <Rectangle x:Name="hover"
                                   Opacity="0"
                                   Stroke="{StaticResource BorderBrushHighlighted}"
                                   Fill="{StaticResource TextBoxBackgroundSelected}"
                                   Style="{StaticResource StandardRectangle}" />
                        <Rectangle x:Name="invalidUnfocused"
                                   Opacity="0"
                                   Stroke="{StaticResource CheckBoxInvalidUnfocusedBorderBrush}"
                                   Fill="{StaticResource CheckBoxInvalidUnfocusedBackgroundBrush}"
                                   Style="{StaticResource StandardRectangle}" />
                        <Rectangle x:Name="invalidFocused"
                                   Opacity="0"
                                   Stroke="{StaticResource CheckBoxInvalidFocusedBorderBrush}"
                                   Fill="{StaticResource CheckBoxInvalidFocusedBackgroundBrush}"
                                   Style="{StaticResource StandardRectangle}" />
                        <Path x:Name="checkBox"
                              Height="10"
                              Width="12"
                              Stretch="Fill"
                              Opacity="0"
                              Fill="{StaticResource CheckBoxCheckBackgroundBrush}"
                              UseLayoutRounding="False"
                              Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 
                              1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,
                              433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,
                              438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 
                              1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z" />
                        <Rectangle x:Name="IndeterminateCheck"
                                   Fill="{StaticResource CheckBoxIndeterminateCheckBackgroundBrush}"
                                   Height="3"
                                   Width="8"
                                   Opacity="0" />
                        <Rectangle x:Name="disabled"
                                   Opacity="0"
                                   Fill="Black"
                                   Style="{StaticResource StandardRectangle}" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          Grid.Column="1"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox-->
    <ControlTemplate x:Key="ComboBoxToggleButton"
                     TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border SnapsToDevicePixels="True"
                    x:Name="Border"
                    Grid.ColumnSpan="2"
                    Background="{StaticResource BackgroundNormal}"
                    BorderBrush="{StaticResource BorderBrushNormal}"
                    BorderThickness="1" />
            <Path x:Name="Arrow"
                  Grid.Column="1"
                  Opacity="0.6"
                  Fill="{StaticResource Foreground}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter TargetName="Arrow"
                        Property="Opacity"
                        Value="1" />
                <Setter TargetName="Border"
                        Property="BorderBrush"
                        Value="{StaticResource BorderBrushHighlighted}" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="Arrow"
                        Property="Opacity"
                        Value="1" />
                <Setter TargetName="Arrow"
                        Property="Fill"
                        Value="{StaticResource BackgroundSelected}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox"
                     TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
                Focusable="False"
                Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="StandardComboBox"
           TargetType="{x:Type ComboBox}">
        <Style.Resources>
            <Style TargetType="{x:Type ComboBoxItem}">
                <Setter Property="SnapsToDevicePixels"
                        Value="true" />
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Border"
                                    Padding="2"
                                    SnapsToDevicePixels="true"
                                    BorderThickness="1">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted"
                                         Value="true">
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource BackgroundSelected}" />
                                    <Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource BorderBrushSelected}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Foreground"
                Value="{StaticResource Foreground}" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="True" />
        <Setter Property="MinWidth"
                Value="50" />
        <Setter Property="MinHeight"
                Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                                      Template="{StaticResource ComboBoxToggleButton}"
                                      Grid.Column="2"
                                      Focusable="false"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press" />
                        <ContentPresenter x:Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="1,0,23,0"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 CaretBrush="{StaticResource Foreground}"
                                 Style="{x:Null}"
                                 Template="{StaticResource ComboBoxTextBox}"
                                 VerticalAlignment="Center"
                                 Margin="2,0,25,0"
                                 Focusable="True"
                                 Background="Transparent"
                                 Foreground="{StaticResource Foreground}"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Rectangle x:Name="DisabledRectangle"
                                   Fill="Black"
                                   Opacity=".25"
                                   Visibility="Hidden" />
                        <Popup VerticalOffset="-1"
                               SnapsToDevicePixels="True"
                               x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{StaticResource BackgroundNormal}"
                                        BorderThickness="1"
                                        BorderBrush="{StaticResource BorderBrushNormal}" />
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="DropDownBorder"
                                    Property="MinHeight"
                                    Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </Trigger>
                        <Trigger Property="IsEditable"
                                 Value="True">
                            <Setter Property="IsTabStop"
                                    Value="False" />
                            <Setter TargetName="PART_EditableTextBox"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="ContentSite"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="DisabledRectangle"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Menus-->
    <Style TargetType="{x:Type Menu}"
           x:Key="StandardMenu">
        <Style.Resources>
            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
                   TargetType="{x:Type Separator}">
                <Setter Property="Height"
                        Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border BorderBrush="{StaticResource MenuSeparatorBorderBrush}"
                                    BorderThickness="1"
                                    Margin="25,0,0,0" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </Style.Resources>
        <Setter Property="Background"
                Value="{StaticResource LightBackground}" />
        <Setter Property="Foreground"
                Value="{StaticResource Foreground}" />
    </Style>
    <Style TargetType="{x:Type MenuItem}"
           x:Key="DarkMenuItem">
        <!--<Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <!--Border 1-->
                    <Border x:Name="Border"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            SnapsToDevicePixels="False">
                        <Grid x:Name="Grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col0"
                                                  MinWidth="17"
                                                  Width="Auto"
                                                  SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="Auto"
                                                  SharedSizeGroup="MenuTextColumnGroup" />
                                <ColumnDefinition Width="Auto"
                                                  SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition x:Name="Col3"
                                                  Width="14" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0"
                                              x:Name="Icon"
                                              VerticalAlignment="Center"
                                              ContentSource="Icon" />
                            <ContentPresenter Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              x:Name="HeaderHost"
                                              RecognizesAccessKey="True"
                                              ContentSource="Header"
                                              VerticalAlignment="Center" />
                            <ContentPresenter Grid.Column="2"
                                              Margin="8,1,8,1"
                                              x:Name="IGTHost"
                                              ContentSource="InputGestureText"
                                              VerticalAlignment="Center" />
                            <Grid Grid.Column="3"
                                  Margin="4,0,6,0"
                                  x:Name="ArrowPanel"
                                  VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Center"
                                      Fill="{TemplateBinding Foreground}"
                                      Data="M0,0 L0,8 L4,4 z" />
                            </Grid>
                            <Popup IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Right"
                                   HorizontalOffset="-1"
                                   x:Name="SubMenuPopup"
                                   Focusable="false"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                   AllowsTransparency="True">
                                <Grid Margin="0,0,5,5">
                                    <!--Border 2-->
                                    <Border x:Name="SubMenuBorder"
                                            BorderBrush="{StaticResource MenuSeparatorBorderBrush}"
                                            BorderThickness="1"
                                            Background="{StaticResource SubmenuItemBackground}"
                                            SnapsToDevicePixels="True">
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="2"
                                                              Color="Black" />
                                        </Border.Effect>
                                        <Grid x:Name="SubMenu"
                                              Grid.IsSharedSizeScope="True"
                                              Margin="2">
                                            <StackPanel IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </Grid>
                                    </Border>
                                    <!--Border 3-->
                                    <Border Margin="1,0,0,0"
                                            x:Name="TransitionBorder"
                                            Width="0"
                                            Height="2"
                                            VerticalAlignment="Top"
                                            HorizontalAlignment="Left"
                                            Background="{StaticResource SubmenuItemBackground}"
                                            SnapsToDevicePixels="False"
                                            BorderThickness="1"
                                            BorderBrush="{StaticResource SubmenuItemBackground}" />
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Role"
                                 Value="TopLevelHeader">
                            <Setter Property="Padding"
                                    Value="6,0,6,2" />
                            <Setter TargetName="SubMenuPopup"
                                    Property="Placement"
                                    Value="Bottom" />
                            <Setter TargetName="Col0"
                                    Property="MinWidth"
                                    Value="0" />
                            <Setter TargetName="Col3"
                                    Property="Width"
                                    Value="Auto" />
                            <Setter TargetName="Icon"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="IGTHost"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="ArrowPanel"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="SubMenuBorder"
                                    Property="BorderThickness"
                                    Value="1,1,1,1" />
                            <Setter TargetName="SubMenu"
                                    Property="Margin"
                                    Value="2,3,2,2" />
                            <Setter TargetName="TransitionBorder"
                                    Property="Width"
                                    Value="{Binding ActualWidth, ElementName=Grid}" />
                        </Trigger>
                        <Trigger Property="Role"
                                 Value="TopLevelItem">
                            <Setter Property="Padding"
                                    Value="6,0,6,2" />
                            <Setter TargetName="Col0"
                                    Property="MinWidth"
                                    Value="0" />
                            <Setter TargetName="Col3"
                                    Property="Width"
                                    Value="Auto" />
                            <Setter TargetName="Icon"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="IGTHost"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="ArrowPanel"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role"
                                 Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock"
                                    Value="Top" />
                            <Setter Property="Padding"
                                    Value="10,3,0,3" />
                            <Setter TargetName="Border"
                                    Property="MinHeight"
                                    Value="22" />
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource SubmenuItemBackground}" />
                        </Trigger>
                        <Trigger Property="Role"
                                 Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock"
                                    Value="Top" />
                            <Setter Property="Padding"
                                    Value="10,3,0,3" />
                            <Setter TargetName="Border"
                                    Property="MinHeight"
                                    Value="22" />
                            <Setter TargetName="ArrowPanel"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource SubmenuItemBackground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted"
                                           Value="true" />
                                <Condition Property="Role"
                                           Value="TopLevelHeader" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource MenuItemHighlightedBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted"
                                           Value="true" />
                                <Condition Property="Role"
                                           Value="TopLevelItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource MenuItemHighlightedBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted"
                                           Value="true" />
                                <Condition Property="Role"
                                           Value="SubmenuHeader" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource SubmenuItemBackgroundHighlighted}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted"
                                           Value="true" />
                                <Condition Property="Role"
                                           Value="SubmenuItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource SubmenuItemBackgroundHighlighted}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSubmenuOpen"
                                           Value="true" />
                                <Condition Property="Role"
                                           Value="TopLevelHeader" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource SubmenuItemBackground}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource MenuSeparatorBorderBrush}" />
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="1,1,1,0" />
                        </MultiTrigger>
                        <Trigger Property="IsSubmenuOpen"
                                 Value="true">
                            <Setter TargetName="ArrowPanelPath"
                                    Property="Fill"
                                    Value="{StaticResource BackgroundSelected}" />
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation"
                                 Value="true">
                            <Setter TargetName="SubMenuPopup"
                                    Property="PopupAnimation"
                                    Value="None" />
                        </Trigger>
                        <Trigger Property="Icon"
                                 Value="{x:Null}">
                            <Setter TargetName="Icon"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{StaticResource MenuDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Context Menu-->
    <Style x:Key="StandardContextMenu"
           TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="RenderOptions.ClearTypeHint"
                Value="Enabled" />
        <Setter Property="TextOptions.TextFormattingMode"
                Value="Ideal" />
        <Setter Property="Background"
                Value="{DynamicResource LightBackground}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource MenuSeparatorBorderBrush}" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
                Value="True" />
        <Setter Property="HasDropShadow"
                Value="True" />
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
        <!--<Setter Property="FontSize" Value="{DynamicResource ContextMenuFontSize}" />-->
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
        <Setter Property="Foreground"
                Value="{StaticResource Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="LayoutRoot"
                            Background="Transparent">
                        <Border x:Name="Border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                            <ScrollViewer x:Name="SubMenuScrollViewer"
                                          CanContentScroll="True"
                                          Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Grid.IsSharedSizeScope="True"
                                                Margin="0"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                KeyboardNavigation.TabNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                                 Value="True">
                            <Setter TargetName="LayoutRoot"
                                    Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{DynamicResource MenuShadowColor}"
                                                      BlurRadius="4"
                                                      ShadowDepth="2"
                                                      Direction="315"
                                                      Opacity="0.3" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="LayoutRoot"
                                    Property="Padding"
                                    Value="0,0,6,6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Separator-->
    <Style TargetType="{x:Type Separator}">
        <!--<Setter Property="OverridesDefaultStyle" Value="true" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Width="1"
                            Margin="2,1"
                            Background="{StaticResource ForegroundDark}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--UserControl-->
    <Style TargetType="{x:Type UserControl}">
        <Setter Property="Background"
                Value="{StaticResource Background}" />
        <Setter Property="Foreground"
                Value="{StaticResource Foreground}" />
    </Style>

    <Style TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource StandardTextBox}" />
    <Style TargetType="{x:Type Button}"
           BasedOn="{StaticResource StandardButton}" />
    <Style TargetType="{x:Type PasswordBox}"
           BasedOn="{StaticResource StandardPasswordBox}" />
    <Style TargetType="{x:Type ScrollBar}"
           BasedOn="{StaticResource StandardScrollBar}" />
    <!--<Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource StandardTabControl}"/>-->
    <Style TargetType="{x:Type CheckBox}"
           BasedOn="{StaticResource FlatCheckBox}" />
    <Style TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource StandardComboBox}" />
    <Style TargetType="{x:Type Menu}"
           BasedOn="{StaticResource StandardMenu}" />
    <Style TargetType="{x:Type MenuItem}"
           BasedOn="{StaticResource DarkMenuItem}" />
    <Style TargetType="{x:Type ContextMenu}"
           BasedOn="{StaticResource StandardContextMenu}" />

</ResourceDictionary>
