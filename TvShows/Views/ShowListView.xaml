<UserControl x:Class="Views.ShowListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:TvShows"
             xmlns:infrastructure="clr-namespace:TvShows.Infrastructure"
             xmlns:views="clr-namespace:TvShows.Views"
             xmlns:viewmodels="clr-namespace:TvShows.ViewModels"
             mc:Ignorable="d"
             d:DesignHeight="800"
             d:DesignWidth="800"
             d:DataContext="{d:DesignInstance {x:Type viewmodels:ShowListViewModel}}">
    <!--<UserControl.DataContext>
        <viewmodels:ShowListViewModel />
    </UserControl.DataContext>-->
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <infrastructure:TvShowsSampleData x:Key="TvShowsSampleData" />
        <infrastructure:BindingProxy x:Key="proxy"
                                     Data="{Binding}" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal"
                    Margin="10">
            <StackPanel.Resources>
                <Style TargetType="{x:Type Image}">
                    <Setter Property="Height"
                            Value="25" />
                    <Setter Property="Margin"
                            Value="4" />
                </Style>
            </StackPanel.Resources>
            <Button Style="{DynamicResource ToolbarButtonStyle}"
                    Command="{Binding AddShowCommand}"
                    ToolTip="Add New Show">
                <Image Source="{DynamicResource AddDrawingImage}" />
            </Button>
            <Button Style="{DynamicResource ToolbarButtonStyle}"
                    Command="{Binding ImportFromFoldersCommand}"
                    ToolTip="Add shows from existing folder structure">
                <Image Source="{DynamicResource ImportFromFoldersDrawingImage}" />
            </Button>
            <Button Style="{DynamicResource ToolbarButtonStyle}"
                    Command="{Binding UpcomingEpisodesCommand}"
                    ToolTip="Options">
                <Image Source="{DynamicResource UpcomingDrawingImage}"
                       Width="32" />
            </Button>
            <Button Style="{DynamicResource ToolbarButtonStyle}"
                    Command="{Binding ConfigureOptionsCommand}"
                    ToolTip="Options">
                <Image Source="{DynamicResource OptionsDrawingImage}" />
            </Button>
            <ComboBox SelectedIndex="0">
                <Image Source="{DynamicResource SortAscendAlphaDrawingImage}" />
                <Image Source="{DynamicResource SortDescAlphaDrawingImage}" />
            </ComboBox>
            <Menu>
                <MenuItem>
                    <MenuItem.Header>
                        <Image Source="{DynamicResource ReportsDrawingImage}" />
                    </MenuItem.Header>
                    <MenuItem Header="Episodes available not collected"
                              Command="{Binding ShowEpisodesAvailableNotCollected}" />
                    <MenuItem Header="Upcoming Episodes" />
                </MenuItem>
            </Menu>
            <Separator />
            <ToggleButton IsChecked="{Binding ShowCompleteShows}"
                          Style="{DynamicResource ToggleToolbarButtonStyle}"
                          ToolTip="Show Complete Shows">
                <Image Source="{DynamicResource CheckmarkDrawingImage}"
                       Width="24" />
            </ToggleButton>
            <ToggleButton IsChecked="{Binding ShowOnlyFavorites}"
                          Style="{DynamicResource ToggleToolbarButtonStyle}"
                          ToolTip="Show Only Favorites">
                <Image Source="{DynamicResource StarOnDrawingImage}"
                       Width="24" />
            </ToggleButton>
            <Button Style="{DynamicResource ToolbarButtonStyle}"
                    Command="{Binding UpdateAllShowsCommand}">
                <Image Source="{DynamicResource UpdateLowDrawingImage}"
                       RenderTransformOrigin="0.5, 0.5"
                       Width="32">
                    <Image.RenderTransform>
                        <RotateTransform x:Name="AnimatedRotateTransform"
                                         Angle="0" />
                    </Image.RenderTransform>
                    <Image.Style>
                        <Style TargetType="Image">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsUpdatingShows}"
                                             Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:2"
                                                                 To="360"
                                                                 Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                                                 RepeatBehavior="Forever" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:1"
                                                                 To="0"
                                                                 Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
            <Separator />
            <TextBlock Text="Filter:"
                       VerticalAlignment="Center" />
            <TextBox Width="200"
                     Margin="5,0,0,0"
                     Text="{Binding TextFilter, UpdateSourceTrigger=PropertyChanged}" />
            <Button Style="{DynamicResource ToolbarButtonStyle}"
                    Command="{Binding ClearTextFilterCommand}"
                    Content="X"
                    Height="28"
                    Margin="0,5" />
        </StackPanel>
        <Grid Grid.Row="1"
              HorizontalAlignment="Stretch"
              Margin="20">
            <!--Visibility="{Binding IsNotLoading, Converter={StaticResource BooleanToVisibilityConverter}}"-->
            <ListView Width="Auto"
                      Background="Transparent"
                      BorderThickness="0"
                      Foreground="{StaticResource Foreground}"
                      ItemsSource="{Binding TvShowsCollectionView}"
                      Grid.Row="1"
                      d:DataContext="{StaticResource TvShowsSampleData}"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListView.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                     Color="Transparent" />
                </ListView.Resources>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <DataTemplate.Resources>
                            <Style TargetType="{x:Type Hyperlink}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver"
                                             Value="True">
                                        <Setter Property="Foreground"
                                                Value="{StaticResource BackgroundSelected}" />
                                    </Trigger>
                                </Style.Triggers>
                                <Setter Property="Foreground"
                                        Value="{StaticResource Foreground}" />
                                <Setter Property="TextBlock.TextDecorations"
                                        Value="{x:Null}" />
                            </Style>
                        </DataTemplate.Resources>
                        <Grid Margin="0,5,0,10"
                              Background="Transparent">
                            <Grid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Delete"
                                              Command="{Binding Data.DeleteTvShowCommand, Source={StaticResource proxy}}"
                                              CommandParameter="{Binding}" />
                                </ContextMenu>
                            </Grid.ContextMenu>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Image Source="{Binding PosterPath, Converter={infrastructure:PosterPathConverter}, ConverterParameter=w92}"
                                   Width="50"
                                   VerticalAlignment="Top" />
                            <StackPanel Grid.Column="1"
                                        Margin="15,0">
                                <StackPanel Orientation="Horizontal">
                                    <Button Style="{DynamicResource ImageButtonStyle}"
                                            Margin="2,3,5,3"
                                            Command="{Binding ToggleIsFavorite}"
                                            Cursor="Hand">
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <Grid>
                                                    <Image Source="{DynamicResource StarOffDrawingImage}"
                                                           Width="16" />
                                                    <Image Source="{DynamicResource StarOnDrawingImage}"
                                                           Width="16"
                                                           Visibility="{Binding IsFavorite, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                    <Image Source="{DynamicResource StarOnDrawingImage}"
                                                           Width="16"
                                                           Opacity="0"
                                                           x:Name="StarHover" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver"
                                                             Value="True">
                                                        <Setter TargetName="StarHover"
                                                                Property="Opacity"
                                                                Value=".5" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                    <TextBlock FontSize="16"
                                               HorizontalAlignment="Left"
                                               Width="279">
                                        <Hyperlink Command="{Binding DataContext.ViewShowCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:ShowListView}}}"
                                                   CommandParameter="{Binding}">
											    <TextBlock Text="{Binding Name}" />
									    </Hyperlink>
                                    </TextBlock>
                                </StackPanel>

                                <Grid Margin="0,7,0,5">
                                    <TextBlock HorizontalAlignment="Right"
                                               Text="{Binding Progress, Mode=OneWay, StringFormat=' \{0\} %'}" />
                                </Grid>
                                <ProgressBar Value="{Binding Progress, Mode=OneWay}"
                                             Height="20"
                                             Width="300">
                                    <ProgressBar.ToolTip>
                                        <TextBlock>
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="Collected {0} of {1}">
                                                    <Binding Path="EpisodesCollectedCount" />
                                                    <Binding Path="EpisodesAvailableCount" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </ProgressBar.ToolTip>
                                </ProgressBar>

                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel IsItemsHost="True"
                                   Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border x:Name="Bd">
                                        <ContentPresenter />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>

            <!-- Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}" -->
            <local:LoadingControl VerticalAlignment="Stretch"
                                  Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </Grid>

    </Grid>
</UserControl>
